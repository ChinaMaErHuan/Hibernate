	Hibernate中的一级缓存装的是持久化对象 二级缓存装的是散装数据
	
	缓存：缓存是什么，解决什么问题？ 
	位于速度相差较大的两种硬件/软件之间的，用于协调两者数据传输速度差异的结构，
	均可称之为缓存Cache。缓存目的：让数据更接近于应用程序，协调速度不匹配，使访问速度更快。 
	缓存的范围分为3类: 
	1.事务范围（单Session即一级缓存） 
	   事务范围的缓存只能被当前事务访问,每个事务都有各自的缓存,缓存内的数据通常采用相互关联的对象形式.
	   缓存的生命周期依赖于事务的生命周期,只有当事务结束时,缓存的生命周期才会结束.
	   事务范围的缓存使用内存作为存储介质,一级缓存就属于事务范围. 
	2.应用范围（单SessionFactory即二级缓存） 
	   应用程序的缓存可以被应用范围内的所有事务共享访问.缓存的生命周期依赖于应用的生命周期,
	   只有当应用结束时,缓存的生命周期才会结束.应用范围的缓存可以使用内存或硬盘作为存储介质,
	   二级缓存就属于应用范围. 
	3.集群范围（多SessionFactory） 
	   在集群环境中,缓存被一个机器或多个机器的进程共享,缓存中的数据被复制到集群环境中的每个进程节点,
	   进程间通过远程通信来保证缓存中的数据的一致,缓存中的数据通常采用对象的松散数据形式.
	
	二级缓存如何工作的 
	Hibernate的二级缓存同一级缓存一样，也是针对对象ID来进行缓存。所以说，二级缓存的作用范围是针对根据ID获得对象的查询。 
	● 在执行各种条件查询时，如果所获得的结果集为实体对象的集合，那么就会把所有的数据对象根据ID放入到二级缓存中。 
	● 当Hibernate根据ID访问数据对象的时候，首先会从Session一级缓存中查找，如果查不到并且配置了二级缓存，那么会从二级缓存中查找，如果还查不到，就会查询数据库，把结果按照ID放入到缓存中。 
	● 删除、更新、增加数据的时候，同时更新缓存。 
	
	与Hibernate一级缓存Session范围相对的是SessionFactory范围的二级缓存，SessionFactory也提供了相应的缓存机制。SessionFactory缓存可以依据功能和目的的不同而划分为内置缓存和外置缓存。 
	
	SessionFactory的内置缓存中存放了映射元数据和预定义SQL语句，映射元数据是映射文件中数据的副本，而预定义SQL语句是在Hibernate初始化阶段根据映射元数据推导出来的。SessionFactory的内置缓存是只读的，应用程序不能修改缓存中的映射元数据和预定义SQL语句，因此SessionFactory不需要进行内置缓存与映射文件的同步。 
	
	SessionFactory的外置缓存是一个可配置的插件。在默认情况下，SessionFactory不会启用这个插件。外置缓存的数据是数据库数据的副本，外置缓存的介质可以是内存或者硬盘。SessionFactory的外置缓存也被称为Hibernate的二级缓存。 
	
	Hibernate的二级缓存的实现原理与一级缓存是一样的，也是通过以ID为key的Map来实现对对象的缓存。 
	
	二级缓存是缓存实体对象的，由于Hibernate的二级缓存是作用在SessionFactory范围内的，因而它比一级缓存的范围更广，可以被所有的Session对象所共享。 
	
	在通常情况下会将具有以下特征的数据放入到二级缓存中： 
	● 很少被修改的数据。 
	● 不是很重要的数据，允许出现偶尔并发的数据。 
	● 不会被并发访问的数据。 
	● 常量数据。 
	● 不会被第三方修改的数据 
	
	而对于具有以下特征的数据则不适合放在二级缓存中： 
	● 经常被修改的数据。 
	● 财务数据，绝对不允许出现并发。 
	● 与其他应用共享的数据。 
	
	在这里特别要注意的是对放入缓存中的数据不能有第三方的应用对数据进行更改（其中也包括在自己程序中使用其他方式进行数据的修改，例如，JDBC），因为那样Hibernate将不会知道数据已经被修改，也就无法保证缓存中的数据与数据库中数据的一致性。 
	
	常见的缓存组件 
	在默认情况下，Hibernate会使用EHCache作为二级缓存组件。但是，可以通过设置hibernate.cache.provider_class属性，指定其他的缓存策略，该缓存策略必须实现org.hibernate.cache.CacheProvider接口。 
	通过实现org.hibernate.cache.CacheProvider接口可以提供对不同二级缓存组件的支持，此接口充当缓存插件与Hibernate之间的适配器。 
	组件	Provider类	类型	集群	查询缓存
	Hashtable	org.hibernate.cache.HashtableCacheProvider	内存	不支持	支持
	EHCache	org.hibernate.cache.EhCacheProvider	内存，硬盘	不支持	支持
	OSCache	org.hibernate.cache.OSCacheProvider	内存，硬盘	支持	支持
	SwarmCache	org.hibernate.cache.SwarmCacheProvider	集群	支持	不支持
	JBoss TreeCache	org.hibernate.cache.TreeCacheProvider	集群	支持	支持
	Hibernate已经不再提供对JCS（Java Caching System）组件的支持了。 
	集群缓存的概念： 
	当一台服务器上的执行了update方法修改了一条数据，那么只有这一台服务器上的二级缓存会同步于数据库，其他服务器上的二级缓存里面这条数据就没意义了。这个时候用OSCache缓存机制，只要有一台服务器上有数据修改了，马上会从配置文件中找到配置好的其他服务器IP地址，进行广播，告诉他们我这条数据修改了，你们也更新同步一下。（是不是有点像手机上微博的推送功能） 